<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\AM32REF_F031.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\AM32REF_F031.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Wed Mar 20 10:08:47 2024
<BR><P>
<H3>Maximum Stack Usage =        316 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; initCorePeripherals &rArr; MX_TIM1_Init &rArr; LL_GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC1_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[d]">DMA1_Channel1_IRQHandler</a> from stm32f0xx_it.o(.text.DMA1_Channel1_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel2_3_IRQHandler</a> from stm32f0xx_it.o(.text.DMA1_Channel2_3_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel4_5_IRQHandler</a> from stm32f0xx_it.o(.text.DMA1_Channel4_5_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from stm32f0xx_it.o(.text.EXTI0_1_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from stm32f0xx_it.o(.text.EXTI2_3_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from stm32f0xx_it.o(.text.EXTI4_15_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f0xx_it.o(.text.HardFault_Handler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[1a]">I2C2_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f0xx_it.o(.text.NMI_Handler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32f0xx_it.o(.text.PendSV_Handler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[1b]">SPI1_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[1c]">SPI2_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32f0xx_it.o(.text.SVC_Handler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32f0xx_it.o(.text.SysTick_Handler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_stm32f0xx.o(.text.SystemInit) referenced from startup_stm32f031c6tx.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from stm32f0xx_it.o(.text.TIM14_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[16]">TIM15_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[17]">TIM16_IRQHandler</a> from stm32f0xx_it.o(.text.TIM16_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[18]">TIM17_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[14]">TIM6_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[1d]">USART1_IRQHandler</a> from stm32f0xx_it.o(.text.USART1_IRQHandler) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[1e]">USART2_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f031c6tx.o(.text) referenced from startup_stm32f031c6tx.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f031c6tx.o(.text)
 <LI><a href="#[1f]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(.text)
</UL>
<P><STRONG><a name="[87]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[22]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[30]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[88]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[89]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[8b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[8c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031c6tx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initAfterJump
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod$div0
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_idiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_idivmod$div0</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, idiv_div0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[92]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[28]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[93]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>ADC_DMA_Callback</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, adc.o(.text.ADC_DMA_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
</UL>

<P><STRONG><a name="[31]"></a>ADC_Init</STRONG> (Thumb, 296 bytes, Stack size 96 bytes, adc.o(.text.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ADC_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_Init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCorePeripherals
</UL>

<P><STRONG><a name="[d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DMA1_Channel1_IRQHandler &rArr; transfercomplete &rArr; computeDshotDMA &rArr; saveEEpromSettings &rArr; save_flash_nolib
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, stm32f0xx_it.o(.text.DMA1_Channel2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = DMA1_Channel2_3_IRQHandler &rArr; transfercomplete &rArr; computeDshotDMA &rArr; saveEEpromSettings &rArr; save_flash_nolib
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text.DMA1_Channel4_5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXTI0_1_IRQHandler &rArr; interruptRoutine &rArr; maskPhaseInterrupts
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interruptRoutine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXTI2_3_IRQHandler &rArr; interruptRoutine &rArr; maskPhaseInterrupts
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interruptRoutine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXTI4_15_IRQHandler &rArr; interruptRoutine &rArr; maskPhaseInterrupts
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interruptRoutine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>LL_ADC_Init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f0xx_ll_adc.o(.text.LL_ADC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[34]"></a>LL_ADC_REG_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f0xx_ll_adc.o(.text.LL_ADC_REG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_ADC_REG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[48]"></a>LL_EXTI_Init</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, stm32f0xx_ll_exti.o(.text.LL_EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_GPIO_Init
</UL>

<P><STRONG><a name="[32]"></a>LL_GPIO_Init</STRONG> (Thumb, 186 bytes, Stack size 36 bytes, stm32f0xx_ll_gpio.o(.text.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_TIM_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_GPIO_Init
</UL>

<P><STRONG><a name="[38]"></a>LL_Init1msTick</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_ll_utils.o(.text.LL_Init1msTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_Init1msTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[3a]"></a>LL_RCC_GetUSARTClockFreq</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_RCC_GetUSARTClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[45]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_ll_utils.o(.text.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[3f]"></a>LL_TIM_BDTR_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f0xx_ll_tim.o(.text.LL_TIM_BDTR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_TIM_BDTR_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[3d]"></a>LL_TIM_Init</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, stm32f0xx_ll_tim.o(.text.LL_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_TIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_TIM_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[3e]"></a>LL_TIM_OC_Init</STRONG> (Thumb, 524 bytes, Stack size 36 bytes, stm32f0xx_ll_tim.o(.text.LL_TIM_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_TIM_OC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[3b]"></a>LL_USART_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, stm32f0xx_ll_usart.o(.text.LL_USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
</UL>

<P><STRONG><a name="[65]"></a>MX_IWDG_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, peripherals.o(.text.MX_IWDG_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>MX_TIM1_Init</STRONG> (Thumb, 444 bytes, Stack size 144 bytes, peripherals.o(.text.MX_TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = MX_TIM1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_BDTR_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>PeriodElapsedCallback</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, main.o(.text.PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PeriodElapsedCallback &rArr; changeCompInput
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCompInterrupts
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeCompInput
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SystemClock_Config</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, peripherals.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemClock_Config &rArr; LL_Init1msTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
</UL>

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f0xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f0xx_it.o(.text.TIM14_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIM14_IRQHandler &rArr; PeriodElapsedCallback &rArr; changeCompInput
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriodElapsedCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM16_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text.TIM16_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM16_IRQHandler &rArr; tenKhzRoutine &rArr; zcfoundroutine &rArr; changeCompInput
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UN_GPIO_Init</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, peripherals.o(.text.UN_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UN_GPIO_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
</UL>

<P><STRONG><a name="[49]"></a>UN_TIM_Init</STRONG> (Thumb, 220 bytes, Stack size 72 bytes, peripherals.o(.text.UN_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UN_TIM_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
</UL>

<P><STRONG><a name="[1d]"></a>USART1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USART1_IRQHandler &rArr; setChannels &rArr; map
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChannels
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveCRSF
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031c6tx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>activateADC</STRONG> (Thumb, 144 bytes, Stack size 4 bytes, adc.o(.text.activateADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = activateADC
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCorePeripherals
</UL>

<P><STRONG><a name="[6c]"></a>allOff</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, phaseouts.o(.text.allOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = allOff
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBrushedStartupTune
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[6d]"></a>allpwm</STRONG> (Thumb, 148 bytes, Stack size 20 bytes, phaseouts.o(.text.allpwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = allpwm
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>changeCompInput</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, comparator.o(.text.changeCompInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = changeCompInput
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startMotor
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriodElapsedCallback
</UL>

<P><STRONG><a name="[41]"></a>comStep</STRONG> (Thumb, 732 bytes, Stack size 16 bytes, phaseouts.o(.text.comStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = comStep
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBrushedStartupTune
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startMotor
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriodElapsedCallback
</UL>

<P><STRONG><a name="[4c]"></a>computeDshotDMA</STRONG> (Thumb, 900 bytes, Stack size 72 bytes, dshot.o(.text.computeDshotDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = computeDshotDMA &rArr; saveEEpromSettings &rArr; save_flash_nolib
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEEpromSettings
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getInputPinState
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>computeServoInput</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, signal.o(.text.computeServoInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = computeServoInput &rArr; playChangedTone &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAbsDif
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEEpromSettings
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
</UL>

<P><STRONG><a name="[54]"></a>crsf_UART_Init</STRONG> (Thumb, 260 bytes, Stack size 80 bytes, peripherals.o(.text.crsf_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = crsf_UART_Init &rArr; LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>delayMicros</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, functions.o(.text.delayMicros))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[78]"></a>delayMillis</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, functions.o(.text.delayMillis))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBrushedStartupTune
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
</UL>

<P><STRONG><a name="[85]"></a>detectInput</STRONG> (Thumb, 476 bytes, Stack size 20 bytes, signal.o(.text.detectInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = detectInput
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
</UL>

<P><STRONG><a name="[56]"></a>enableADC_DMA</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, adc.o(.text.enableADC_DMA))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCorePeripherals
</UL>

<P><STRONG><a name="[43]"></a>enableCompInterrupts</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, comparator.o(.text.enableCompInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startMotor
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriodElapsedCallback
</UL>

<P><STRONG><a name="[55]"></a>enableCorePeripherals</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, peripherals.o(.text.enableCorePeripherals))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = enableCorePeripherals &rArr; ADC_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;activateADC
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableADC_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>fullBrake</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, phaseouts.o(.text.fullBrake))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fullBrake
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[73]"></a>generatePwmTimerEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, peripherals.o(.text.generatePwmTimerEvent))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>getAbsDif</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, functions.o(.text.getAbsDif))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[4d]"></a>getInputPinState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, io.o(.text.getInputPinState))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
</UL>

<P><STRONG><a name="[58]"></a>initAfterJump</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, peripherals.o(.text.initAfterJump))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = initAfterJump &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>initCorePeripherals</STRONG> (Thumb, 412 bytes, Stack size 56 bytes, peripherals.o(.text.initCorePeripherals))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = initCorePeripherals &rArr; MX_TIM1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_TIM_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>interruptRoutine</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, main.o(.text.interruptRoutine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = interruptRoutine &rArr; maskPhaseInterrupts
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maskPhaseInterrupts
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[5b]"></a>loadEEpromSettings</STRONG> (Thumb, 936 bytes, Stack size 40 bytes, main.o(.text.loadEEpromSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = loadEEpromSettings &rArr; read_flash_bin
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setVolume
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_bin
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 3284 bytes, Stack size 80 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = main &rArr; initCorePeripherals &rArr; MX_TIM1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetInputCaptureTimer
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generatePwmTimerEvent
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allpwm
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Callback
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_telem_DMA
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeTelemPackage
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInputPullUp
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBrushedStartupTune
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveDshotDma
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveCRSF
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCorePeripherals
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initAfterJump
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare3
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare2
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare1
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proportionalBrake
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maskPhaseInterrupts
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCompInterrupts
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeCompInput
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicros
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAbsDif
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_dshot_package
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idiv
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6a]"></a>makeTelemPackage</STRONG> (Thumb, 1580 bytes, Stack size 32 bytes, serial_telemetry.o(.text.makeTelemPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = makeTelemPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>make_dshot_package</STRONG> (Thumb, 416 bytes, Stack size 32 bytes, dshot.o(.text.make_dshot_package))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = make_dshot_package
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>map</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, functions.o(.text.map))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = map
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChannels
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
</UL>

<P><STRONG><a name="[5a]"></a>maskPhaseInterrupts</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, comparator.o(.text.maskPhaseInterrupts))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = maskPhaseInterrupts
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interruptRoutine
</UL>

<P><STRONG><a name="[77]"></a>playBeaconTune3</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, sounds.o(.text.playBeaconTune3))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = playBeaconTune3 &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[79]"></a>playBlueJayTune</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, sounds.o(.text.playBlueJayTune))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = playBlueJayTune &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
</UL>

<P><STRONG><a name="[63]"></a>playBrushedStartupTune</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, sounds.o(.text.playBrushedStartupTune))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = playBrushedStartupTune &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>playChangedTone</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sounds.o(.text.playChangedTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = playChangedTone &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[52]"></a>playDefaultTone</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sounds.o(.text.playDefaultTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = playDefaultTone &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[7a]"></a>playInputTune</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, sounds.o(.text.playInputTune))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = playInputTune &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[7b]"></a>playInputTune2</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, sounds.o(.text.playInputTune2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = playInputTune2 &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[60]"></a>playStartupTune</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, sounds.o(.text.playStartupTune))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = playStartupTune &rArr; playBlueJayTune &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>proportionalBrake</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, phaseouts.o(.text.proportionalBrake))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = proportionalBrake
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[5c]"></a>read_flash_bin</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, eeprom.o(.text.read_flash_bin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = read_flash_bin
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
</UL>

<P><STRONG><a name="[4b]"></a>receiveCRSF</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, peripherals.o(.text.receiveCRSF))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>receiveDshotDma</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, io.o(.text.receiveDshotDma))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = receiveDshotDma
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>resetInputCaptureTimer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, peripherals.o(.text.resetInputCaptureTimer))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>runBrushedLoop</STRONG> (Thumb, 792 bytes, Stack size 48 bytes, main.o(.text.runBrushedLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = runBrushedLoop &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twoChannelReverse
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twoChannelForward
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare3
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare2
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare1
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicros
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>saveEEpromSettings</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, main.o(.text.saveEEpromSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = saveEEpromSettings &rArr; save_flash_nolib
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
</UL>

<P><STRONG><a name="[5f]"></a>save_flash_nolib</STRONG> (Thumb, 456 bytes, Stack size 20 bytes, eeprom.o(.text.save_flash_nolib))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = save_flash_nolib
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEEpromSettings
</UL>

<P><STRONG><a name="[86]"></a>sendDshotDma</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, io.o(.text.sendDshotDma))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sendDshotDma
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
</UL>

<P><STRONG><a name="[6b]"></a>send_telem_DMA</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, serial_telemetry.o(.text.send_telem_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = send_telem_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>setChannels</STRONG> (Thumb, 556 bytes, Stack size 24 bytes, crsf.o(.text.setChannels))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = setChannels &rArr; map
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>setInput</STRONG> (Thumb, 1780 bytes, Stack size 48 bytes, main.o(.text.setInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = setInput &rArr; playInputTune2 &rArr; allOff
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proportionalBrake
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fullBrake
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startMotor
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maskPhaseInterrupts
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAbsDif
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>setInputPullUp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, io.o(.text.setInputPullUp))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>setPWMCompare1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, peripherals.o(.text.setPWMCompare1))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[6f]"></a>setPWMCompare2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, peripherals.o(.text.setPWMCompare2))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[70]"></a>setPWMCompare3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, peripherals.o(.text.setPWMCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[5d]"></a>setVolume</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sounds.o(.text.setVolume))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
</UL>

<P><STRONG><a name="[80]"></a>startMotor</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, main.o(.text.startMotor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = startMotor &rArr; changeCompInput
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCompInterrupts
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeCompInput
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[61]"></a>telem_UART_Init</STRONG> (Thumb, 284 bytes, Stack size 80 bytes, serial_telemetry.o(.text.telem_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = telem_UART_Init &rArr; LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>tenKhzRoutine</STRONG> (Thumb, 1208 bytes, Stack size 40 bytes, main.o(.text.tenKhzRoutine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = tenKhzRoutine &rArr; zcfoundroutine &rArr; changeCompInput
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maskPhaseInterrupts
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>

<P><STRONG><a name="[35]"></a>transfercomplete</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, signal.o(.text.transfercomplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = transfercomplete &rArr; computeDshotDMA &rArr; saveEEpromSettings &rArr; save_flash_nolib
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDshotDma
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detectInput
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveDshotDma
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAbsDif
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_dshot_package
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getInputPinState
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>twoChannelForward</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, phaseouts.o(.text.twoChannelForward))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = twoChannelForward
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[7d]"></a>twoChannelReverse</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, phaseouts.o(.text.twoChannelReverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = twoChannelReverse
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[83]"></a>zcfoundroutine</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, main.o(.text.zcfoundroutine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = zcfoundroutine &rArr; changeCompInput
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCompInterrupts
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeCompInput
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[96]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[97]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[98]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
