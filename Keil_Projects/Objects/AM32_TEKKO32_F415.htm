<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\AM32_TEKKO32_F415.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\AM32_TEKKO32_F415.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Wed Mar 20 10:12:01 2024
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from at32f415_it.o(.text.BusFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[20]">CAN1_SE_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3e]">CMP1_IRQHandler</a> from at32f415_it.o(.text.CMP1_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3f]">CMP2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[f]">CRM_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from at32f415_it.o(.text.DMA1_Channel1_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from at32f415_it.o(.text.DMA1_Channel4_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from at32f415_it.o(.text.DMA1_Channel6_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[39]">DMA2_Channel1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3a]">DMA2_Channel2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[40]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from at32f415_it.o(.text.DebugMon_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[33]">ERTCAlarm_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[d]">ERTC_WKUP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[10]">EXINT0_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[32]">EXINT15_10_IRQHandler</a> from at32f415_it.o(.text.EXINT15_10_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[11]">EXINT1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[12]">EXINT2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[13]">EXINT3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[14]">EXINT4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[21]">EXINT9_5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at32f415_it.o(.text.HardFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2a]">I2C1_ERR_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[29]">I2C1_EVT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2c]">I2C2_ERR_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2b]">I2C2_EVT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from at32f415_it.o(.text.MemManage_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at32f415_it.o(.text.NMI_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3d]">OTGFS1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[34]">OTGFS1_WKUP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from at32f415_it.o(.text.PendSV_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[35]">SDIO1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at32f415_it.o(.text.SVC_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from at32f415_it.o(.text.SysTick_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[41]">SystemInit</a> from system_at32f415.o(.text.SystemInit) referenced from startup_at32f415.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_TMR9_IRQHandler</a> from at32f415_it.o(.text.TMR1_BRK_TMR9_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[25]">TMR1_CH_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[23]">TMR1_OVF_TMR10_IRQHandler</a> from at32f415_it.o(.text.TMR1_OVF_TMR10_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from at32f415_it.o(.text.TMR1_TRG_HALL_TMR11_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[26]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[27]">TMR3_GLOBAL_IRQHandler</a> from at32f415_it.o(.text.TMR3_GLOBAL_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[28]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[36]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[37]">UART4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[38]">UART5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from at32f415_it.o(.text.USART1_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from at32f415_it.o(.text.UsageFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[42]">__main</a> from __main.o(!!!main) referenced from startup_at32f415.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[42]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[45]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[49]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[4e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[44]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[46]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[48]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[4a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[53]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[4f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ERTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ERTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>OTGFS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTGFS1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[47]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[4c]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[51]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[50]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[6a]"></a>ADC_DMA_Callback</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, adc.o(.text.ADC_DMA_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>ADC_Init</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, adc.o(.text.ADC_Init))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_default_para_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reset
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_adc_clock_div_set
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_tempersensor_vintrv_enable
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_conversion_trigger_set
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_channel_set
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_status_get
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_start
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_init_status_get
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_mode_enable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_base_config
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_base_default_para_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCorePeripherals
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CMP1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_it.o(.text.CMP1_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interruptRoutine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, at32f415_it.o(.text.DMA1_Channel1_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_get
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, at32f415_it.o(.text.DMA1_Channel4_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, at32f415_it.o(.text.DMA1_Channel6_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_get
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXINT15_10_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_it.o(.text.EXINT15_10_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processDshot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>MX_IWDG_Init</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, peripherals.o(.text.MX_IWDG_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>PeriodElapsedCallback</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, main.o(.text.PeriodElapsedCallback))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCompInterrupts
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeCompInput
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_TRG_HALL_TMR11_IRQHandler
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SystemInit</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, system_at32f415.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>TIM1_Init</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, peripherals.o(.text.TIM1_Init))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_buffer_enable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
</UL>

<P><STRONG><a name="[22]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, at32f415_it.o(.text.TMR1_BRK_TMR9_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_OVF_TMR10_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f415_it.o(.text.TMR1_OVF_TMR10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_it.o(.text.TMR1_TRG_HALL_TMR11_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriodElapsedCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, at32f415_it.o(.text.TMR3_GLOBAL_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>UN_TIM_Init</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, peripherals.o(.text.UN_TIM_Init))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
</UL>

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f415_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>adc_base_config</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_base_config))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[5d]"></a>adc_base_default_para_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_base_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[64]"></a>adc_calibration_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_calibration_init))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[65]"></a>adc_calibration_init_status_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_calibration_init_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[66]"></a>adc_calibration_start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_calibration_start))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[67]"></a>adc_calibration_status_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_calibration_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[62]"></a>adc_dma_mode_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_dma_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[63]"></a>adc_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[5f]"></a>adc_ordinary_channel_set</STRONG> (Thumb, 602 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_ordinary_channel_set))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[61]"></a>adc_ordinary_conversion_trigger_set</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_ordinary_conversion_trigger_set))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[a8]"></a>adc_ordinary_software_trigger_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_ordinary_software_trigger_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>adc_tempersensor_vintrv_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_adc.o(.text.adc_tempersensor_vintrv_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[78]"></a>allOff</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, phaseouts.o(.text.allOff))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBrushedStartupTune
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune2
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[79]"></a>allpwm</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, phaseouts.o(.text.allpwm))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>changeCompInput</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, comparator.o(.text.changeCompInput))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startMotor
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriodElapsedCallback
</UL>

<P><STRONG><a name="[90]"></a>cmp_enable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, at32f415_cmp.o(.text.cmp_enable))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
</UL>

<P><STRONG><a name="[6e]"></a>comStep</STRONG> (Thumb, 898 bytes, Stack size 0 bytes, phaseouts.o(.text.comStep))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBrushedStartupTune
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune2
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startMotor
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriodElapsedCallback
</UL>

<P><STRONG><a name="[7a]"></a>computeDshotDMA</STRONG> (Thumb, 1224 bytes, Stack size 0 bytes, dshot.o(.text.computeDshotDMA))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEEpromSettings
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getInputPinState
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processDshot
</UL>

<P><STRONG><a name="[7d]"></a>computeServoInput</STRONG> (Thumb, 480 bytes, Stack size 0 bytes, signal.o(.text.computeServoInput))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAbsDif
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEEpromSettings
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
</UL>

<P><STRONG><a name="[5c]"></a>crm_adc_clock_div_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_adc_clock_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[c8]"></a>crm_ahb_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_ahb_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ca]"></a>crm_apb1_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_apb1_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[c9]"></a>crm_apb2_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_apb2_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[cb]"></a>crm_auto_step_mode_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_auto_step_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[c5]"></a>crm_clock_source_enable</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_clock_source_enable))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[d4]"></a>crm_clocks_freq_get</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_clocks_freq_get))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[c6]"></a>crm_flag_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[55]"></a>crm_periph_clock_enable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_TIM_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[d2]"></a>crm_periph_reset</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_periph_reset))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_reset
</UL>

<P><STRONG><a name="[c7]"></a>crm_pll_config</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_pll_config))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[c4]"></a>crm_reset</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[cc]"></a>crm_sysclk_switch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_sysclk_switch))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[cd]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f415_crm.o(.text.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[82]"></a>crsf_UART_Init</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, peripherals.o(.text.crsf_UART_Init))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_default_para_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_single_line_halfduplex_select
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receiver_enable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>delayMicros</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, functions.o(.text.delayMicros))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[b3]"></a>delayMillis</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, functions.o(.text.delayMillis))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBrushedStartupTune
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune2
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
</UL>

<P><STRONG><a name="[d3]"></a>detectInput</STRONG> (Thumb, 568 bytes, Stack size 0 bytes, signal.o(.text.detectInput))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
</UL>

<P><STRONG><a name="[5b]"></a>dma_channel_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f415_dma.o(.text.dma_channel_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[58]"></a>dma_default_para_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f415_dma.o(.text.dma_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[69]"></a>dma_flag_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f415_dma.o(.text.dma_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>dma_init</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, at32f415_dma.o(.text.dma_init))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[5a]"></a>dma_interrupt_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f415_dma.o(.text.dma_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[57]"></a>dma_reset</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, at32f415_dma.o(.text.dma_reset))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[70]"></a>enableCompInterrupts</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, comparator.o(.text.enableCompInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startMotor
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriodElapsedCallback
</UL>

<P><STRONG><a name="[8a]"></a>enableCorePeripherals</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, peripherals.o(.text.enableCorePeripherals))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>flash_flag_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f415_flash.o(.text.flash_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[be]"></a>flash_lock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_flash.o(.text.flash_lock))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[bb]"></a>flash_sector_erase</STRONG> (Thumb, 398 bytes, Stack size 0 bytes, at32f415_flash.o(.text.flash_sector_erase))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[ba]"></a>flash_unlock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, at32f415_flash.o(.text.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[bc]"></a>flash_word_program</STRONG> (Thumb, 390 bytes, Stack size 0 bytes, at32f415_flash.o(.text.flash_word_program))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[8c]"></a>fullBrake</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, phaseouts.o(.text.fullBrake))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[af]"></a>generatePwmTimerEvent</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, peripherals.o(.text.generatePwmTimerEvent))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>getAbsDif</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, functions.o(.text.getAbsDif))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[93]"></a>getCompOutputLevel</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, comparator.o(.text.getCompOutputLevel))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interruptRoutine
</UL>

<P><STRONG><a name="[7b]"></a>getInputPinState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, io.o(.text.getInputPinState))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
</UL>

<P><STRONG><a name="[8d]"></a>gpio_default_para_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_gpio.o(.text.gpio_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>

<P><STRONG><a name="[83]"></a>gpio_init</STRONG> (Thumb, 526 bytes, Stack size 0 bytes, at32f415_gpio.o(.text.gpio_init))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>

<P><STRONG><a name="[75]"></a>gpio_mode_QUICK</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, functions.o(.text.gpio_mode_QUICK))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDshotDma
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allpwm
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInputPullUp
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveDshotDma
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twoChannelReverse
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twoChannelForward
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proportionalBrake
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fullBrake
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_TIM_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[72]"></a>gpio_pin_remap_config</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, at32f415_gpio.o(.text.gpio_pin_remap_config))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_TIM_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[98]"></a>initAfterJump</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, peripherals.o(.text.initAfterJump))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>initCorePeripherals</STRONG> (Thumb, 312 bytes, Stack size 0 bytes, peripherals.o(.text.initCorePeripherals))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UN_TIM_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>interruptRoutine</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, main.o(.text.interruptRoutine))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maskPhaseInterrupts
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCompOutputLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP1_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>loadEEpromSettings</STRONG> (Thumb, 1052 bytes, Stack size 0 bytes, main.o(.text.loadEEpromSettings))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setVolume
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_bin
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>main</STRONG> (Thumb, 3392 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetInputCaptureTimer
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generatePwmTimerEvent
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allpwm
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_software_trigger_enable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Callback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_telem_DMA
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeTelemPackage
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInputPullUp
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveDshotDma
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBrushedStartupTune
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveCRSF
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCorePeripherals
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initAfterJump
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare3
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare2
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare1
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proportionalBrake
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maskPhaseInterrupts
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCompInterrupts
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeCompInput
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicros
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAbsDif
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_dshot_package
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a6]"></a>makeTelemPackage</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, serial_telemetry.o(.text.makeTelemPackage))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>make_dshot_package</STRONG> (Thumb, 484 bytes, Stack size 0 bytes, dshot.o(.text.make_dshot_package))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processDshot
</UL>

<P><STRONG><a name="[80]"></a>map</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, functions.o(.text.map))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
</UL>

<P><STRONG><a name="[92]"></a>maskPhaseInterrupts</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, comparator.o(.text.maskPhaseInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interruptRoutine
</UL>

<P><STRONG><a name="[56]"></a>nvic_irq_enable</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, at32f415_misc.o(.text.nvic_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[b2]"></a>playBeaconTune3</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, sounds.o(.text.playBeaconTune3))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[b4]"></a>playBlueJayTune</STRONG> (Thumb, 302 bytes, Stack size 0 bytes, sounds.o(.text.playBlueJayTune))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playStartupTune
</UL>

<P><STRONG><a name="[9c]"></a>playBrushedStartupTune</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, sounds.o(.text.playBrushedStartupTune))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>playChangedTone</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, sounds.o(.text.playChangedTone))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[81]"></a>playDefaultTone</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, sounds.o(.text.playDefaultTone))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[b5]"></a>playInputTune</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, sounds.o(.text.playInputTune))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[b6]"></a>playInputTune2</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, sounds.o(.text.playInputTune2))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[9b]"></a>playStartupTune</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, sounds.o(.text.playStartupTune))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBlueJayTune
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>processDshot</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, main.o(.text.processDshot))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_dshot_package
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>proportionalBrake</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, phaseouts.o(.text.proportionalBrake))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[95]"></a>read_flash_bin</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, eeprom.o(.text.read_flash_bin))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
</UL>

<P><STRONG><a name="[9a]"></a>receiveCRSF</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, peripherals.o(.text.receiveCRSF))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>receiveDshotDma</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, io.o(.text.receiveDshotDma))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>resetInputCaptureTimer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, peripherals.o(.text.resetInputCaptureTimer))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>runBrushedLoop</STRONG> (Thumb, 826 bytes, Stack size 0 bytes, main.o(.text.runBrushedLoop))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twoChannelReverse
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twoChannelForward
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare3
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare2
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPWMCompare1
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicros
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>saveEEpromSettings</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, main.o(.text.saveEEpromSettings))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
</UL>

<P><STRONG><a name="[99]"></a>save_flash_nolib</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, eeprom.o(.text.save_flash_nolib))
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_flag_clear
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEEpromSettings
</UL>

<P><STRONG><a name="[bf]"></a>sendDshotDma</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, io.o(.text.sendDshotDma))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transfercomplete
</UL>

<P><STRONG><a name="[a7]"></a>send_telem_DMA</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, serial_telemetry.o(.text.send_telem_DMA))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>setInput</STRONG> (Thumb, 1762 bytes, Stack size 0 bytes, main.o(.text.setInput))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proportionalBrake
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fullBrake
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune2
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playChangedTone
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playDefaultTone
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allOff
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startMotor
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maskPhaseInterrupts
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAbsDif
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processDshot
</UL>

<P><STRONG><a name="[9e]"></a>setInputPullUp</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, io.o(.text.setInputPullUp))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>setPWMCompare1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, peripherals.o(.text.setPWMCompare1))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[ab]"></a>setPWMCompare2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, peripherals.o(.text.setPWMCompare2))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[ac]"></a>setPWMCompare3</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, peripherals.o(.text.setPWMCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[96]"></a>setVolume</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sounds.o(.text.setVolume))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
</UL>

<P><STRONG><a name="[c2]"></a>startMotor</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, main.o(.text.startMotor))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCompInterrupts
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeCompInput
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[8f]"></a>system_clock_config</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, peripherals.o(.text.system_clock_config))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_auto_step_mode_enable
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
</UL>

<P><STRONG><a name="[ce]"></a>system_core_clock_update</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, system_at32f415.o(.text.system_core_clock_update))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[91]"></a>telem_UART_Init</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, serial_telemetry.o(.text.telem_UART_Init))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_default_para_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_single_line_halfduplex_select
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_transmitter_enable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCorePeripherals
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>tenKhzRoutine</STRONG> (Thumb, 1264 bytes, Stack size 0 bytes, main.o(.text.tenKhzRoutine))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfoundroutine
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playInputTune
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maskPhaseInterrupts
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCompOutputLevel
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMillis
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_BRK_TMR9_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>tmr_channel_enable</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, at32f415_tmr.o(.text.tmr_channel_enable))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCorePeripherals
</UL>

<P><STRONG><a name="[73]"></a>tmr_output_channel_buffer_enable</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, at32f415_tmr.o(.text.tmr_output_channel_buffer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[74]"></a>tmr_period_buffer_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_tmr.o(.text.tmr_period_buffer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[b7]"></a>tmr_reset</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, at32f415_tmr.o(.text.tmr_reset))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDshotDma
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveDshotDma
</UL>

<P><STRONG><a name="[6b]"></a>transfercomplete</STRONG> (Thumb, 412 bytes, Stack size 0 bytes, signal.o(.text.transfercomplete))
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDshotDma
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detectInput
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeServoInput
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveDshotDma
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playBeaconTune3
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAbsDif
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_dshot_package
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getInputPinState
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeDshotDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>twoChannelForward</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, phaseouts.o(.text.twoChannelForward))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[b9]"></a>twoChannelReverse</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, phaseouts.o(.text.twoChannelReverse))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_QUICK
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
</UL>

<P><STRONG><a name="[88]"></a>usart_dma_receiver_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_usart.o(.text.usart_dma_receiver_enable))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
</UL>

<P><STRONG><a name="[cf]"></a>usart_dma_transmitter_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_usart.o(.text.usart_dma_transmitter_enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
</UL>

<P><STRONG><a name="[89]"></a>usart_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_usart.o(.text.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
</UL>

<P><STRONG><a name="[84]"></a>usart_init</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, at32f415_usart.o(.text.usart_init))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
</UL>

<P><STRONG><a name="[86]"></a>usart_receiver_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_usart.o(.text.usart_receiver_enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
</UL>

<P><STRONG><a name="[87]"></a>usart_single_line_halfduplex_select</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_usart.o(.text.usart_single_line_halfduplex_select))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
</UL>

<P><STRONG><a name="[85]"></a>usart_transmitter_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f415_usart.o(.text.usart_transmitter_enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;telem_UART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crsf_UART_Init
</UL>

<P><STRONG><a name="[d0]"></a>zcfoundroutine</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, main.o(.text.zcfoundroutine))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableCompInterrupts
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeCompInput
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comStep
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[d5]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[d9]"></a>_feq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[db]"></a>_fneq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[dc]"></a>_fgr</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_fcmpge</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[de]"></a>_fgeq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_fcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[df]"></a>_fleq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_fcmplt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[e1]"></a>_fls</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[e3]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpge
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[e2]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[da]"></a>_fcmpeq</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fneq
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_feq
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInput
</UL>

<P><STRONG><a name="[e4]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runBrushedLoop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tenKhzRoutine
</UL>

<P><STRONG><a name="[dd]"></a>_fcmpge</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, fgeqf.o(x$fpl$fgeqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fgeq
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fgr
</UL>

<P><STRONG><a name="[e0]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fls
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fleq
</UL>

<P><STRONG><a name="[d8]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpge
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[d7]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[e5]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[97]"></a>__NVIC_SystemReset</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, main.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEEpromSettings
</UL>

<P><STRONG><a name="[e6]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[d6]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
